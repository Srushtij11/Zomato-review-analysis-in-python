# -*- coding: utf-8 -*-
"""MVA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17SoEzxZrL2qhJGo08uwGQWxOk8LfnWAl

LOADING IMPORTANT LIBRARIES:
"""

from google.colab import drive
drive.mount('/content/drive')

from google.colab import files
uploaded = files.upload()

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

df1 = pd.read_csv('https://drive.google.com/file/d/1LrdtfWg0IdlLs4aKetNh4ScoYS_SXQR9/view?usp=sharing', encoding="ISO-8859-1")

df2 = pd.read_csv('Country-Code.csv')

df1.head()

df2.head()

df1.info()

df2.info()

df1.shape

df1.describe()

df1.isnull().sum()

#Another method to check null values, comprehensive method
df1.columns

[i for i in df1.columns if df1[i].isnull().sum()>0]

sns.heatmap(df1.isnull()) #Null values are viewed properly because of large datasets

plt.rcParams['figure.figsize']=(12,6) #Increasing the size os the figure using function plt.rcParams so that we can see the numbers and data properly.

sns.heatmap(df1.isnull()) #Now we will able to view the values as we have increassed the size

#Now we'll check, If we have any null values in our 2nd dataframe:
df2.isnull().sum()

#Merging both the dataframes: We'll use pandas library for that:

df = pd.merge(df1, df2)

df.columns

#Let's plot some charts to understand the data better:
name = df['Country'].value_counts().index #Index function helps us to view only country name, inorder to view the more information about the country do not use index word.

value = df['city'].value_counts().values

#Let's plot a pie chart which will actually help us show the distribution of all this countries usage of zomato.
plt.pie(value[:5], labels=name[:5])

#Getting more accurate results i.e getting percentage for each country
plt.pie(value[:3], labels=name[:3],autopct="%1.2f%%")

#GROUPING FEATURES AGGREATE RATING, RATING COLOR, RATING TEXT
df.groupby(['Aggregate rating','Rating color','Rating text']).size()

#Now converting the above group into dataframe:
df.groupby(['Aggregate rating', 'Rating color', 'Rating text']).size().reset_index()

#Stroing this daatafrae:
rating = df.groupby(['Aggregate rating', 'Rating color', 'Rating text']).size().reset_index()

rating

rating.rename(columns={0: 'rating count'},inplace=True)

rating

sns.barplot(x='Aggregate rating', y='rating count', data=rating, hue= 'Rating color', palette=['Blue','red','orange','yellow','green','darkgreen']) #Hue parameter is used for color

#I wanted to analyse the rating color count for that we'll use countplot:

sns.countplot(x='Rating color',data = rating, palette=['Blue','red','orange','yellow','green','darkgreen']) #Hue parameter is used for color

df.columns

#Create a piechart to show the top city distribution
plt.pie(df['City'].value_counts().values[:5], labels=df['City'].value_counts().index[:5])

#Piechart for most ordered cuisines (TOP 10)

plt.pie(df['Cuisines'].value_counts().values[:10], labels=df['Cuisines'].value_counts().index[:10],autopct='%1.2f%%')

df.columns

df.head(3) #Checking the value functions for the further analysis

df[df['Has Online delivery'] == 'Yes'].groupby('Country').size().reset_index()

#Find out the countries which has given the best rating: Taking best rating = Excellent
df[df['Rating text'] == 'Excellent'].groupby('Country').size().reset_index()







